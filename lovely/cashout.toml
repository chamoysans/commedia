[manifest]
version = "1.0.0"
dump_lua = true
priority = 0


[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest then"
position = "at"
payload = """
if (G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest) or next(SMODS.find_card("j_cmdia_bank_account")) then 
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)})"
position = "at"
payload = """
local _interest = G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)

if next(SMODS.find_card("j_cmdia_bank_account")) then
    _interest = G.GAME.interest_amount*G.GAME.interest_cap/5
end

add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = _interest})
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if (not G.GAME.seeded and not G.GAME.challenge) or SMODS.config.seeded_unlocks then"
position = "at"
payload = """
if (not G.GAME.seeded and not G.GAME.challenge) or SMODS.config.seeded_unlocks or not (next(SMODS.find_card("j_cmdia_bank_account"))) then
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "check_for_unlock({type = 'interest_streak'})"
position = "at"
payload = """
if not (next(SMODS.find_card("j_cmdia_bank_account"))) then check_for_unlock({type = 'interest_streak'}) end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "dollars = dollars + G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)"
position = "at"
payload = """
dollars = dollars + _interest
"""
match_indent = true